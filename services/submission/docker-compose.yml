version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: submissions
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  web:
    build: .
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/submissions
      CELERY_BROKER_URL: redis://redis:6379/0
      INPUT_QUEUE: execute_queue          # matches Execution Serviceâ€™s INPUT_QUEUE
      OUTPUT_QUEUE: result_queue          # Execution Service will send to this queue
      CALLBACK_TIMEOUT_SECONDS: 600
    ports:
      - "5000:5000"
    volumes:
      - .:/app

  celery_worker:
    build: .
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/submissions
      CELERY_BROKER_URL: redis://redis:6379/0
      INPUT_QUEUE: execute_queue
      OUTPUT_QUEUE: result_queue
      CALLBACK_TIMEOUT_SECONDS: 600
    # Run a Celery worker that only processes the "result_queue" for receive_result tasks
    command: celery -A queue_utils.celery worker --loglevel=info -Q result_queue

  # Optional: Execution Service container, if you want to run it locally
  # execution_service:
  #   image: your-execution-service-image
  #   environment:
  #     BROKER: redis://redis:6379/0
  #     INPUT_QUEUE: execute_queue
  #     OUTPUT_QUEUE: result_queue
  #     LANGUAGE: python
  #   depends_on:
  #     - redis

volumes:
  db_data:
